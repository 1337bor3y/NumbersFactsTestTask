kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: D:/Android/LabsAndroid/NumbersFactsTestTask/app/src/main/java/com/example/numbersfactstesttask/data/repository/NumbersRepositoryImpl.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:249)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at jdk.internal.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:getRandomFact visibility:public modality:OPEN <> ($this:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl, $completion:kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact>) returnType:kotlin.Any? [suspend]
  overridden:
    public abstract fun getRandomFact ($completion: kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact>): kotlin.Any? [suspend] declared in com.example.numbersfactstesttask.domain.repository.NumbersRepository
  $this: VALUE_PARAMETER name:<this> type:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl
  VALUE_PARAMETER CONTINUATION_CLASS name:$completion index:0 type:kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact>
  BLOCK_BODY
    CLASS CONTINUATION_CLASS CLASS name:<Continuation> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.coroutines.jvm.internal.ContinuationImpl]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>
      FIELD CONTINUATION_CLASS_RESULT_FIELD name:result type:kotlin.Result<kotlin.Any?> visibility:public/*package*/
      FIELD FIELD_FOR_OUTER_THIS name:this$0 type:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl visibility:public/*package*/ [final]
      FIELD name:label type:kotlin.Int visibility:public/*package*/
      CONSTRUCTOR visibility:public/*package*/ <> (this$0:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl, $completion:kotlin.coroutines.Continuation<com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>>?) returnType:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> [primary]
        VALUE_PARAMETER name:this$0 index:0 type:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl
        VALUE_PARAMETER name:$completion index:1 type:kotlin.coroutines.Continuation<com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>>?
        BLOCK_BODY
          SET_FIELD 'FIELD FIELD_FOR_OUTER_THIS name:this$0 type:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl visibility:public/*package*/ [final]' type=kotlin.Unit origin=null
            receiver: GET_VAR '<this>: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> origin=null
            value: GET_VAR 'this$0: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>.<init>' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl origin=null
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> ($completion: kotlin.coroutines.Continuation<kotlin.Any?>?) declared in kotlin.coroutines.jvm.internal.ContinuationImpl'
            $completion: GET_VAR '$completion: kotlin.coroutines.Continuation<com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>>? declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>.<init>' type=kotlin.coroutines.Continuation<com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>>? origin=null
      FUN name:invokeSuspend visibility:public modality:FINAL <> ($this:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>, $result:kotlin.Result<kotlin.Any?>) returnType:kotlin.Any?
        overridden:
          public abstract fun invokeSuspend ($result: kotlin.Result<kotlin.Any?>): kotlin.Any? declared in kotlin.coroutines.jvm.internal.ContinuationImpl
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>
        VALUE_PARAMETER name:$result index:0 type:kotlin.Result<kotlin.Any?>
        BLOCK_BODY
          SET_FIELD 'FIELD CONTINUATION_CLASS_RESULT_FIELD name:result type:kotlin.Result<kotlin.Any?> visibility:public/*package*/' type=kotlin.Unit origin=null
            receiver: GET_VAR '<this>: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>.invokeSuspend' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> origin=null
            value: GET_VAR '$result: kotlin.Result<kotlin.Any?> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>.invokeSuspend' type=kotlin.Result<kotlin.Any?> origin=null
          SET_FIELD 'FIELD name:label type:kotlin.Int visibility:public/*package*/' type=kotlin.Unit origin=null
            receiver: GET_VAR '<this>: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>.invokeSuspend' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> origin=null
            value: CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_FIELD 'FIELD name:label type:kotlin.Int visibility:public/*package*/' type=kotlin.Int origin=null
                receiver: GET_VAR '<this>: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>.invokeSuspend' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> origin=null
              other: CONST Int type=kotlin.Int value=-2147483648
          RETURN type=kotlin.Nothing from='public final fun invokeSuspend ($result: kotlin.Result<kotlin.Any?>): kotlin.Any? declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>'
            CALL 'public open fun getRandomFact ($completion: kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact>): kotlin.Any? [suspend] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl' type=kotlin.Any? origin=null
              $this: GET_FIELD 'FIELD FIELD_FOR_OUTER_THIS name:this$0 type:com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl visibility:public/*package*/ [final]' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl origin=null
                receiver: GET_VAR '<this>: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>.invokeSuspend' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> origin=null
              $completion: GET_VAR '<this>: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation>.invokeSuspend' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact.<Continuation> origin=null
    VAR name:fact type:kotlin.String [val]
      CALL 'public abstract fun getRandomFact ($completion: kotlin.coroutines.Continuation<kotlin.String>): kotlin.Any? [suspend] declared in com.example.numbersfactstesttask.data.remote.NumbersApi' type=kotlin.String origin=null
        $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:numbersApi type:com.example.numbersfactstesttask.data.remote.NumbersApi visibility:private [final]' type=com.example.numbersfactstesttask.data.remote.NumbersApi origin=null
          receiver: GET_VAR '<this>: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl origin=null
        $completion: GET_VAR '$completion: kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact> origin=null
    VAR name:number type:kotlin.Int? [var]
      CALL 'public final fun toIntOrNull (): kotlin.Int? declared in kotlin.text.StringsKt' type=kotlin.Int? origin=null
        $receiver: CALL 'public final fun substring (startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String [inline] declared in kotlin.text.StringsKt' type=kotlin.String origin=null
          $receiver: GET_VAR 'val fact: kotlin.String [val] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.String origin=null
          startIndex: CONST Int type=kotlin.Int value=0
          endIndex: CALL 'public final fun indexOf$default (string: kotlin.String, startIndex: kotlin.Int, ignoreCase: kotlin.Boolean, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Int declared in kotlin.text.StringsKt' type=kotlin.Int origin=DEFAULT_DISPATCH_CALL
            $receiver: GET_VAR 'val fact: kotlin.String [val] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.String origin=null
            string: CONST String type=kotlin.String value=" "
            startIndex: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
              CONST Int type=kotlin.Int value=0
            ignoreCase: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
              CONST Boolean type=kotlin.Boolean value=false
            $mask0: CONST Int type=kotlin.Int value=6
            $handler: CONST Null type=kotlin.Any? value=null
    SET_VAR 'var number: kotlin.Int? [var] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.Unit origin=EQ
      CONST Null type=kotlin.Nothing? value=null
    CALL 'public abstract fun upsertFact (fact: com.example.numbersfactstesttask.data.local.NumberFactEntity, $completion: kotlin.coroutines.Continuation<kotlin.Unit>): kotlin.Any? [suspend] declared in com.example.numbersfactstesttask.data.local.NumbersDao' type=kotlin.Unit origin=null
      $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:numbersDao type:com.example.numbersfactstesttask.data.local.NumbersDao visibility:private [final]' type=com.example.numbersfactstesttask.data.local.NumbersDao origin=null
        receiver: GET_VAR '<this>: com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl origin=null
      fact: CONSTRUCTOR_CALL 'public constructor <init> (number: kotlin.String, fact: kotlin.String) [primary] declared in com.example.numbersfactstesttask.data.local.NumberFactEntity' type=com.example.numbersfactstesttask.data.local.NumberFactEntity origin=null
        number: CALL 'public open fun toString (): kotlin.String [fake_override] declared in kotlin.Nothing' type=kotlin.String origin=null
          $this: BLOCK type=kotlin.Nothing origin=null
            CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Nothing origin=EXCLEXCL
              <T0>: kotlin.Nothing
              arg0: GET_VAR 'var number: kotlin.Int? [var] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.Int? origin=null
            CALL 'public final fun throwKotlinNothingValueException (): kotlin.Nothing declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Nothing origin=null
        fact: GET_VAR 'val fact: kotlin.String [val] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.String origin=null
      $completion: GET_VAR '$completion: kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact> declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact> origin=null
    RETURN type=kotlin.Nothing from='public open fun getRandomFact ($completion: kotlin.coroutines.Continuation<com.example.numbersfactstesttask.domain.model.NumberFact>): kotlin.Any? [suspend] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl'
      CONSTRUCTOR_CALL 'public constructor <init> (number: kotlin.String, fact: kotlin.String) [primary] declared in com.example.numbersfactstesttask.domain.model.NumberFact' type=com.example.numbersfactstesttask.domain.model.NumberFact origin=null
        number: CALL 'public open fun toString (): kotlin.String declared in kotlin.Int' type=kotlin.String origin=null
          $this: TYPE_OP type=kotlin.Nothing origin=IMPLICIT_CAST typeOperand=kotlin.Nothing
            GET_VAR 'var number: kotlin.Int? [var] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.Int? origin=null
        fact: GET_VAR 'val fact: kotlin.String [val] declared in com.example.numbersfactstesttask.data.repository.NumbersRepositoryImpl.getRandomFact' type=kotlin.String origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 45 more
Caused by: java.lang.IllegalStateException: Fake override should have at least one overridden descriptor: FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Nothing) returnType:kotlin.String [fake_override]
	at org.jetbrains.kotlin.backend.jvm.ir.JvmIrUtilsKt.findSuperDeclaration(JvmIrUtils.kt:413)
	at org.jetbrains.kotlin.backend.jvm.mapping.MethodSignatureMapper.findSuperDeclaration(MethodSignatureMapper.kt:440)
	at org.jetbrains.kotlin.backend.jvm.mapping.MethodSignatureMapper.mapToCallableMethod(MethodSignatureMapper.kt:409)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:599)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.gen(ExpressionCodegen.kt:216)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generateConstructorArguments(ExpressionCodegen.kt:765)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitConstructorCall(ExpressionCodegen.kt:753)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitConstructorCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrConstructorCall.accept(IrConstructorCall.kt:27)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.gen(ExpressionCodegen.kt:216)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrCallGenerator.genValueAndPut(IrCallGenerator.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:610)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:638)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 55 more


